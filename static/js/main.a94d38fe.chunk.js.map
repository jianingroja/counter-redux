{"version":3,"sources":["components/reducers/counter.js","components/store/store.js","components/feature/Counter.js","components/actinos/index.js","index.js"],"names":["counter","state","action","type","store","createStore","Counter","className","getState","onClick","dispatch","React","Component","render","ReactDOM","document","getElementById","subscribe"],"mappings":"wPAWeA,EAXC,WAAwB,IAAvBC,EAAsB,uDAAd,EAAGC,EAAW,uCACrC,OAAQA,EAAOC,MACb,IAAK,YACH,OAAOF,EAAQ,EACjB,IAAK,YACH,OAAOA,EAAQ,EACjB,QACE,OAAOA,I,OCDEG,EAFDC,YAAYL,GC8BXM,G,6KAvBX,OACE,yBAAKC,UAAU,aACb,uCACA,4BAAKH,EAAMI,YACX,4BACEC,QAAS,WACPL,EAAMM,SChBT,CACLP,KAAM,gBDaF,KAOA,4BACEM,QAAS,WACPL,EAAMM,SCjBT,CACLP,KAAM,gBDcF,U,GAjBcQ,IAAMC,YEkDtBC,G,MAAS,WACbC,IAASD,OAAO,kBAAC,EAAD,MAAaE,SAASC,eAAe,WAGvDZ,EAAMa,UAAUJ,GAChBA,M","file":"static/js/main.a94d38fe.chunk.js","sourcesContent":["const counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nexport default counter;\n","import counter from \"../reducers/counter\";\nimport { createStore, applyMiddleware } from \"redux\";\n// import thunk from \"redux-thunk\";\n\nconst store = createStore(counter);\n\nexport default store;\n","import React from \"react\";\nimport store from \"../store/store\";\nimport { INCREMENT, DECREMENT, asyncINCREMENT } from \"../actinos/index\";\nimport \"./Counter.css\";\n\nclass Counter extends React.Component {\n  // componentDidMount() {\n  //   const { dispatch } = this.props;\n  //   dispatch(asyncINCREMENT);\n  // }\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Counter</h1>\n        <h2>{store.getState()}</h2>\n        <button\n          onClick={() => {\n            store.dispatch(INCREMENT());\n          }}\n        >\n          +\n        </button>\n        <button\n          onClick={() => {\n            store.dispatch(DECREMENT());\n          }}\n        >\n          -\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","export const INCREMENT = () => {\n  return {\n    type: \"INCREMENT\",\n  };\n};\n\nexport const DECREMENT = () => {\n  return {\n    type: \"DECREMENT\",\n  };\n};\n\n// export const asyncINCREMENT = ({ dispatch }) => {\n//   setTimeout(() => {\n//     dispacth(INCREMENT());\n//   }, 1000);\n// };\n\nexport const asyncDECREMENT = () => {\n  return (dispacth) => {\n    setTimeout(() => {\n      dispacth(DECREMENT);\n    }, 1000);\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Counter from \"./components/feature/Counter\";\nimport store from \"./components/store/store\";\nimport \"./index.css\";\n\n/*\nimport { createStore } from \"redux\";\n\n//reducer\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return state + 1;\n    case \"DECREMENT\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\n//component\nconst Counter = ({ value, onIncrement, onDecrement }) => (\n  <div>\n    <h1>{value}</h1>\n    <button onClick={onIncrement}>+</button>\n    <button onClick={onDecrement}>-</button>\n  </div>\n);\n\n//store\nconst store = createStore(counter);\n\n//react render\nconst render = () => {\n  ReactDOM.render(\n    <Counter\n      value={store.getState()}\n      //actions\n      onIncrement={() =>\n        store.dispatch({\n          type: \"INCREMENT\",\n        })\n      }\n      onDecrement={() =>\n        store.dispatch({\n          type: \"DECREMENT\",\n        })\n      }\n    />,\n    document.getElementById(\"root\")\n  );\n};\n*/\n\nconst render = () => {\n  ReactDOM.render(<Counter />, document.getElementById(\"root\"));\n};\n\nstore.subscribe(render);\nrender();\n"],"sourceRoot":""}